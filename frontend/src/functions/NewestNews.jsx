import { useState, useEffect, useRef } from "react";
import { readText, stopReading } from "../components/VoiceControl";
import { summarizeArticle } from "../components/SummarizeArticle";
import axios from "axios";
import ContainContents from "../components/ContainContents";
import "./NewestNews.css";

export default function NewestNews() {
    const [articles, setArticles] = useState([]);
    const [currentIndex, setCurrentIndex] = useState(0);
    const [summary, setSummary] = useState("");
    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
    const buttonRef = useRef(null); // Tham chi·∫øu ƒë·∫øn n√∫t "B·∫≠t gi·ªçng n√≥i"

    useEffect(() => {
        fetchNews();

        // Th√™m event listener cho ph√≠m Space
        const handleKeyDown = (event) => {
            if (event.code === "Space") {
                event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa ph√≠m Space (cu·ªôn trang)
                buttonRef.current.click(); // K√≠ch ho·∫°t s·ª± ki·ªán click tr√™n n√∫t
            }
        };
        window.addEventListener("keydown", handleKeyDown);

        // D·ªçn d·∫πp event listener khi component unmount
        return () => {
            window.removeEventListener("keydown", handleKeyDown);
        };
    }, []);

    async function fetchNews() {
        try {
            let res = await axios.get("http://localhost:5000/news");
            setArticles(res.data);
            setCurrentIndex(0);
            if (res.data.length > 0) {
                readText("Tin t·ª©c m·ªõi nh·∫•t: " + res.data[0].title);
            }
        } catch (error) {
            console.error("L·ªói t·∫£i tin t·ª©c:", error);
        }
    }

    function startListening() {
        recognition.lang = "vi-VN";
        recognition.start();
        recognition.onresult = async (event) => {
            let command = event.results[0][0].transcript.toLowerCase();
            console.log("L·ªánh nh·∫≠n ƒë∆∞·ª£c:", command);

            if (command.includes("tin ti·∫øp theo")) {
                stopReading(); // D·ª´ng ƒë·ªçc b√†i b√°o c≈©
                let nextIndex = (currentIndex + 1) % articles.length;
                setCurrentIndex(nextIndex);
                setSummary(""); // X√≥a t√≥m t·∫Øt b√†i b√°o c≈©
                readText("Tin ti·∫øp theo: " + articles[nextIndex].title); // ƒê·ªçc ti√™u ƒë·ªÅ m·ªõi
            } else if (command.includes("tin tr∆∞·ªõc")) {
                stopReading(); // D·ª´ng ƒë·ªçc b√†i b√°o c≈©
                if (currentIndex - 1 >= 0) {
                    let nextIndex = (currentIndex - 1) % articles.length;
                    setCurrentIndex(nextIndex);
                    setSummary(""); // X√≥a t√≥m t·∫Øt b√†i b√°o c≈©
                    readText("Tin tr∆∞·ªõc: " + articles[nextIndex].title); // ƒê·ªçc ti√™u ƒë·ªÅ m·ªõi
                } else {
                    readText("Kh√¥ng c√≤n tin tr∆∞·ªõc");
                }
            } else if (command.includes("ƒë·ªçc tin")) {
                if (articles.length === 0) {
                    readText("Kh√¥ng c√≥ b√†i b√°o n√†o.");
                    return;
                }

                let article = articles[currentIndex];

                if (!article || !article.link) {
                    readText("Kh√¥ng th·ªÉ l·∫•y n·ªôi dung b√†i b√°o.");
                    return;
                }

                try {
                    stopReading(); // D·ª´ng b·∫•t k·ª≥ b√†i b√°o n√†o ƒëang ƒë·ªçc
                    readText("ƒêang l·∫•y d·ªØ li·ªáu...");
                    let res = await axios.get(`http://localhost:5000/article?url=${article.link}`);
                    let summaryText = await summarizeArticle(res.data.content);
                    setSummary(summaryText);
                    readText("T√≥m t·∫Øt: " + summaryText);
                } catch (error) {
                    readText("Kh√¥ng th·ªÉ l·∫•y n·ªôi dung b√†i b√°o.");
                    console.error("L·ªói khi l·∫•y n·ªôi dung b√†i b√°o:", error);
                }
            } else if (command.includes("l√†m m·ªõi tin t·ª©c")) {
                stopReading();
                readText("ƒêang c·∫≠p nh·∫≠t tin t·ª©c m·ªõi nh·∫•t...");
                await fetchNews();
            } else if (command.includes("d·ª´ng ƒë·ªçc")) {
                stopReading();
            }
        };
    }

    return (
        <div className="newest-news">
            {articles.length > 0 ? (
                <ContainContents title={articles[currentIndex].title} content={summary || "ƒêang t·∫£i n·ªôi dung..."} />
            ) : (
                <ContainContents title="ƒêang t·∫£i ti√™u ƒë·ªÅ..." content="..." />
            )}
            <button ref={buttonRef} onClick={startListening} className="">
                üéô B·∫≠t gi·ªçng n√≥i
            </button>
        </div>
    );
}